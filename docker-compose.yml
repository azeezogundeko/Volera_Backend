version: '3.8'

services:
  web:
    build: .
    expose:
      - 8000
    env_file:
      - .env
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      # - redis
      # - celery_worker
      - searxng
    networks:
      - dokploy-network
    labels:
      - traefik.enable=true
      - traefik.http.routers.volera-backend.rule=Host(`server.volera.app`)
      - traefik.http.routers.volera-backend.entrypoints=web
      - traefik.http.services.volera-backend.loadbalancer.server.port=8000

  # redis:
  #   image: redis:7-alpine
  #   expose:
  #     - 6379
  #   volumes:
  #     - redis_data:/data
  #   networks:
  #     - dokploy-network

  # celery_worker:
  #   build: .
  #   command: celery -A _celery worker --loglevel=info
  #   env_file:
  #     - .env
  #   volumes:
  #     - ./data:/app/data
  #     - ./logs:/app/logs
  #   depends_on:
  #     - redis
  #   networks:
  #     - dokploy-network

  searxng:
    image: searxng/searxng:latest
    expose:
      - 8080
    volumes:
      - searxng_data:/etc/searxng
    environment:
      - INSTANCE_NAME=volera-search
      - BASE_URL=http://localhost:8080/
      - AUTOCOMPLETE=google
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - dokploy-network
    labels:
      - traefik.enable=true
      - traefik.http.routers.volera-searxng.rule=Host(`search.volera.app`)
      - traefik.http.routers.volera-searxng.entrypoints=web
      - traefik.http.services.volera-searxng.loadbalancer.server.port=8080

volumes:
  redis_data:
  searxng_data:

networks:
  dokploy-network:
    external: true
